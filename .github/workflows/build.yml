# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          17,    # Current Java LTS & minimum supported by Minecraft
        ]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          cache: gradle

      - name: setup gradle
        uses: gradle/actions/setup-gradle@v3

      - name: show java and gradle versions
        run: |
          java -version
          ./gradlew --version

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build (clean, info, stacktrace, enforce Java 17)
        env:
          GRADLE_OPTS: "--enable-native-access=ALL-UNNAMED"
        run: ./gradlew -Dorg.gradle.java.home="$JAVA_HOME" --no-daemon --info --stacktrace clean build -x test

      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/